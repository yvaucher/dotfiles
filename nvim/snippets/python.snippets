snippet pdb
	import pdb; pdb.set_trace()
snippet vpdb
	import vimpdb; vimpdb.set_trace()
snippet pudb
	import pudb; pudb.set_trace()
snippet utf8
	# -*- coding: utf-8 -*-

#Snippets for Odoo OCA addons
snippet agpl
	# -*- coding: utf-8 -*-
	#
	#    Author: `g:snips_author`
	#    Copyright `strftime("%Y")` `g:snips_full_company`
	#
	#    This program is free software: you can redistribute it and/or modify
	#    it under the terms of the GNU Affero General Public License as
	#    published by the Free Software Foundation, either version 3 of the
	#    License, or (at your option) any later version.
	#
	#    This program is distributed in the hope that it will be useful,
	#    but WITHOUT ANY WARRANTY; without even the implied warranty of
	#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	#    GNU Affero General Public License for more details.
	#
	#    You should have received a copy of the GNU Affero General Public License
	#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
	#

snippet __openerp__
	{'name' : '${1:name}',
	 'version' : '${2:version}',
	 'author' : '`g:snips_company`,Odoo Community Association (OCA)',
	 'maintainer': '`g:snips_company`',
	 'license': 'AGPL-3',
	 'category': '${3:category}',
	 'complexity': "${4:complexity}",  # easy, normal, expert
	 'depends' : [${5:depends}],
	 'website': '`g:snips_company_website`',
	 'data': [],
	 'test': [],
	 'installable': True,
	 'auto_install': False,
	}

snippet Model
	class ${1:name}(models.Model):
	    _inherit = '${2:model}'

	    ${3}

snippet TransientModel
	class ${1:name}(models.TransientModel):
	    _inherit = '${2:model}'

	    ${3}

snippet Boolean
	    ${1:name} = fields.Boolean(
	        {2}
	        help=${3:help}
	    )

snippet Char
	    ${1:name} = fields.Char(
	        {2}
	    )

snippet Date
	    ${1:name} = fields.Date(
	        {2}
	    )

snippet Datetime
	    ${1:name} = fields.Datetime(
	        {2}
	    )

snippet Many2one
	    ${1:name} = fields.Many2one(
	        comodel_name={2:model_name},
	        {2}
	    )

snippet One2many
	    ${1:name} = fields.One2many(
	        comodel_name={2:model_name},
	        {2}
	    )

snippet Many2many
	    ${1:name} = fields.Many2many(
	        comodel_name={2:model_name},
	        {2}
	    )
